@using Blazored.SessionStorage
@using BlazorApp1.Identity

@page "/register"

@inject AuthService AuthService
@inject NavigationManager NavigationManager
<h3>Register</h3>
<EditForm class="new-blog-form" Model="@registerRequest" OnValidSubmit="HandleValidSubmit">
    <div class="form-group row">
        <label for="username" class="col-sm-2 col-form-label">Full Name</label>
        <div class="col-sm-10">
            <input type="text" @bind="registerRequest!.FullName" class=" form-control" id="fullname" placeholder="Full Name">
        </div>
    </div>
    <div class="form-group row">
        <label for="username" class="col-sm-2 col-form-label">Username</label>
        <div class="col-sm-10">
            <input type="text" @bind="registerRequest!.Username" class=" form-control" id="username" placeholder="Username">
        </div>
    </div>
    <div class="form-group row">
        <label for="username" class="col-sm-2 col-form-label">E Mail</label>
        <div class="col-sm-10">
            <input type="email" @bind="registerRequest!.Email" class=" form-control" id="email" placeholder="Email">
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-sm-2 col-form-label">Password</label>
        <div class="col-sm-10">
            <input type="password" @bind="registerRequest!.Password" class="form-control" id="password"
                   placeholder="Password">
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Register</button>
        </div>
    </div>
</EditForm>
@code {
    private RegisterRequest? registerRequest = new RegisterRequest();
    private async void HandleValidSubmit()
    {
        registerRequest.Roles = new string[] { "Administrator" };
        var registerResponse = await AuthService.Register(registerRequest!);
        if (registerResponse)
        {
            NavigationManager.NavigateTo("/auth/login");
        }
    }
}